# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        server_name ems2dest.ind4.com;
        location / {
                return 301 https://ems2dest.ind4.com$request_uri;
        }
    }

    server {
        listen 443;
        server_name "";
        return 444;
    }

    server {
        listen 80;
        server_name "";
        return 444;
    }

    server {
        listen       443 ssl http2 default_server;
        #listen       [::]:443 ssl http2;
        server_name  ems2dest.ind4.com;
        root         /usr/share/nginx/html;

        ssl_certificate "/etc/pki/nginx/server.crt";
        ssl_certificate_key "/etc/pki/nginx/private/server.key";
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers PROFILE=SYSTEM;
        ssl_prefer_server_ciphers on;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        proxy_headers_hash_max_size 512;     




        location /skeleton {
            client_max_body_size 10M;
            proxy_pass http://localhost:8081/;
            proxy_http_version 1.1;
            rewrite /skeleton/(.*) /$1  break;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }


        location /portainer {
            proxy_pass http://localhost:9000/;
            proxy_http_version 1.1;
            rewrite /portainer/(.*) /$1  break;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        ## location /cockpit/cockpit/socket {
                ## proxy_pass https://localhost:9090/cockpit/socket;
                ## proxy_http_version 1.1 ;
                ## proxy_set_header Upgrade $http_upgrade;
                ## proxy_set_header Connection "upgrade";
        ## }
        location /cockpit {
            sub_filter '<base href="/'  '<base href="/cockpit/';
            #sub_filter 'cockpit/' 'cockpit/cockpit/';
            sub_filter_once off;
            sub_filter_types *;
            proxy_pass https://localhost:9090/;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            gzip off;

            rewrite /cockpit/(.*) /$1  break;
            ## proxy_pass_header  Sec-WebSocket-Extensions;
            ## proxy_pass_header  Sec-WebSocket-Key;
            ## proxy_pass_header  Sec-WebSocket-Protocol;
            ## proxy_pass_header  Sec-WebSocket-Version;
        }


        location /mqtt-dashboard/ {
            sub_filter '<base href="/'  '<base href="/mqtt-dashboard/';
            sub_filter 'api/' 'mqtt-dashboard/api/';
            sub_filter 'static/' 'mqtt-dashboard/static/';
            sub_filter_types  *;
            sub_filter_once off;
            proxy_pass http://localhost:18083/;
            proxy_http_version 1.1;
            rewrite /mqtt-dashboard/(.*) /$1  break;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_buffering off;
        }



        location /auth/ {
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

            if ($request_method = 'OPTIONS') {
              add_header X-Frame-Options "SAMEORIGIN";
              add_header X-XSS-Protection "1; mode=block" ;
              add_header 'Access-Control-Allow-Origin' '*';
              add_header 'Access-Control-Allow-Credentials' 'true';
              add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
              add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
              add_header 'Access-Control-Max-Age' 1728000;
              add_header 'Content-Type' 'text/plain charset=UTF-8';
              add_header 'Content-Length' 0;
              return 204;
            }
            proxy_pass_header  Set-Cookie;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Fowarded-Host $http_host;
            proxy_set_header X-Fowarded-Host https;
            proxy_pass http://localhost:5000/auth/;  
            proxy_set_header Host $host;
            proxy_redirect     off;
            proxy_headers_hash_max_size 512;
        }

        location /neo/ {
            rewrite /neo/(.*) /$1  break;
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
            #add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

            if ($request_method = 'OPTIONS') {
              add_header X-Frame-Options "SAMEORIGIN";
              add_header X-XSS-Protection "1; mode=block" ;
              #add_header 'Access-Control-Allow-Origin' '*';
              add_header 'Access-Control-Allow-Credentials' 'true';
              add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
              add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
              add_header 'Access-Control-Max-Age' 1728000;
              add_header 'Content-Type' 'text/plain charset=UTF-8';
              add_header 'Content-Length' 0;
              return 204;
            }
            proxy_pass_header  Set-Cookie;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Fowarded-Host $http_host;
            proxy_set_header X-Fowarded-Host https;
            proxy_pass http://localhost:5050/;  
            proxy_set_header Host $host;
            proxy_redirect     off;
            proxy_headers_hash_max_size 512;
        }

        location /.well-known/ {
            proxy_pass http://localhost:5000/.well-known/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        } 

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

}
